// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationSearch Container should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LocationSearch />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          className="location-search"
          onSubmit={[Function]}
>
          <Autosuggest
                    alwaysRenderSuggestions={false}
                    focusInputOnSuggestionClick={true}
                    getSuggestionValue={[Function]}
                    highlightFirstSuggestion={false}
                    id="1"
                    inputProps={
                              Object {
                                        "onChange": [Function],
                                        "placeholder": "Search Locations",
                                        "value": "",
                                      }
                    }
                    multiSection={false}
                    onSuggestionsClearRequested={[Function]}
                    onSuggestionsFetchRequested={[Function]}
                    renderSuggestion={[Function]}
                    renderSuggestionsContainer={[Function]}
                    shouldRenderSuggestions={[Function]}
                    suggestions={Array []}
                    theme={
                              Object {
                                        "container": "react-autosuggest__container",
                                        "containerOpen": "react-autosuggest__container--open",
                                        "input": "react-autosuggest__input",
                                        "inputFocused": "react-autosuggest__input--focused",
                                        "inputOpen": "react-autosuggest__input--open",
                                        "sectionContainer": "react-autosuggest__section-container",
                                        "sectionContainerFirst": "react-autosuggest__section-container--first",
                                        "sectionTitle": "react-autosuggest__section-title",
                                        "suggestion": "react-autosuggest__suggestion",
                                        "suggestionFirst": "react-autosuggest__suggestion--first",
                                        "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                        "suggestionsContainer": "react-autosuggest__suggestions-container",
                                        "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                        "suggestionsList": "react-autosuggest__suggestions-list",
                                      }
                    }
          />
          <button>
                    Submit
          </button>
</form>,
        <div>
          <p
                    className="loading-fetch"
          >
                    Loading...
          </p>
</div>,
        <div>
          <p
                    className="loading-fetch"
          >
                    Loading...
          </p>
</div>,
        <div>
          <p
                    className="loading-fetch"
          >
                    Loading...
          </p>
</div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Autosuggest
              alwaysRenderSuggestions={false}
              focusInputOnSuggestionClick={true}
              getSuggestionValue={[Function]}
              highlightFirstSuggestion={false}
              id="1"
              inputProps={
                            Object {
                                          "onChange": [Function],
                                          "placeholder": "Search Locations",
                                          "value": "",
                                        }
              }
              multiSection={false}
              onSuggestionsClearRequested={[Function]}
              onSuggestionsFetchRequested={[Function]}
              renderSuggestion={[Function]}
              renderSuggestionsContainer={[Function]}
              shouldRenderSuggestions={[Function]}
              suggestions={Array []}
              theme={
                            Object {
                                          "container": "react-autosuggest__container",
                                          "containerOpen": "react-autosuggest__container--open",
                                          "input": "react-autosuggest__input",
                                          "inputFocused": "react-autosuggest__input--focused",
                                          "inputOpen": "react-autosuggest__input--open",
                                          "sectionContainer": "react-autosuggest__section-container",
                                          "sectionContainerFirst": "react-autosuggest__section-container--first",
                                          "sectionTitle": "react-autosuggest__section-title",
                                          "suggestion": "react-autosuggest__suggestion",
                                          "suggestionFirst": "react-autosuggest__suggestion--first",
                                          "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                          "suggestionsContainer": "react-autosuggest__suggestions-container",
                                          "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                          "suggestionsList": "react-autosuggest__suggestions-list",
                                        }
              }
/>,
            <button>
              Submit
</button>,
          ],
          "className": "location-search",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alwaysRenderSuggestions": false,
              "focusInputOnSuggestionClick": true,
              "getSuggestionValue": [Function],
              "highlightFirstSuggestion": false,
              "id": "1",
              "inputProps": Object {
                "onChange": [Function],
                "placeholder": "Search Locations",
                "value": "",
              },
              "multiSection": false,
              "onSuggestionsClearRequested": [Function],
              "onSuggestionsFetchRequested": [Function],
              "renderSuggestion": [Function],
              "renderSuggestionsContainer": [Function],
              "shouldRenderSuggestions": [Function],
              "suggestions": Array [],
              "theme": Object {
                "container": "react-autosuggest__container",
                "containerOpen": "react-autosuggest__container--open",
                "input": "react-autosuggest__input",
                "inputFocused": "react-autosuggest__input--focused",
                "inputOpen": "react-autosuggest__input--open",
                "sectionContainer": "react-autosuggest__section-container",
                "sectionContainerFirst": "react-autosuggest__section-container--first",
                "sectionTitle": "react-autosuggest__section-title",
                "suggestion": "react-autosuggest__suggestion",
                "suggestionFirst": "react-autosuggest__suggestion--first",
                "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                "suggestionsContainer": "react-autosuggest__suggestions-container",
                "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                "suggestionsList": "react-autosuggest__suggestions-list",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
        ],
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p
            className="loading-fetch"
>
            Loading...
</p>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Loading...",
            "className": "loading-fetch",
          },
          "ref": null,
          "rendered": "Loading...",
          "type": "p",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p
            className="loading-fetch"
>
            Loading...
</p>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Loading...",
            "className": "loading-fetch",
          },
          "ref": null,
          "rendered": "Loading...",
          "type": "p",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <p
            className="loading-fetch"
>
            Loading...
</p>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Loading...",
            "className": "loading-fetch",
          },
          "ref": null,
          "rendered": "Loading...",
          "type": "p",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="location-search"
            onSubmit={[Function]}
>
            <Autosuggest
                        alwaysRenderSuggestions={false}
                        focusInputOnSuggestionClick={true}
                        getSuggestionValue={[Function]}
                        highlightFirstSuggestion={false}
                        id="1"
                        inputProps={
                                    Object {
                                                "onChange": [Function],
                                                "placeholder": "Search Locations",
                                                "value": "",
                                              }
                        }
                        multiSection={false}
                        onSuggestionsClearRequested={[Function]}
                        onSuggestionsFetchRequested={[Function]}
                        renderSuggestion={[Function]}
                        renderSuggestionsContainer={[Function]}
                        shouldRenderSuggestions={[Function]}
                        suggestions={Array []}
                        theme={
                                    Object {
                                                "container": "react-autosuggest__container",
                                                "containerOpen": "react-autosuggest__container--open",
                                                "input": "react-autosuggest__input",
                                                "inputFocused": "react-autosuggest__input--focused",
                                                "inputOpen": "react-autosuggest__input--open",
                                                "sectionContainer": "react-autosuggest__section-container",
                                                "sectionContainerFirst": "react-autosuggest__section-container--first",
                                                "sectionTitle": "react-autosuggest__section-title",
                                                "suggestion": "react-autosuggest__suggestion",
                                                "suggestionFirst": "react-autosuggest__suggestion--first",
                                                "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                                "suggestionsContainer": "react-autosuggest__suggestions-container",
                                                "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                                "suggestionsList": "react-autosuggest__suggestions-list",
                                              }
                        }
            />
            <button>
                        Submit
            </button>
</form>,
          <div>
            <p
                        className="loading-fetch"
            >
                        Loading...
            </p>
</div>,
          <div>
            <p
                        className="loading-fetch"
            >
                        Loading...
            </p>
</div>,
          <div>
            <p
                        className="loading-fetch"
            >
                        Loading...
            </p>
</div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Autosuggest
                alwaysRenderSuggestions={false}
                focusInputOnSuggestionClick={true}
                getSuggestionValue={[Function]}
                highlightFirstSuggestion={false}
                id="1"
                inputProps={
                                Object {
                                                "onChange": [Function],
                                                "placeholder": "Search Locations",
                                                "value": "",
                                              }
                }
                multiSection={false}
                onSuggestionsClearRequested={[Function]}
                onSuggestionsFetchRequested={[Function]}
                renderSuggestion={[Function]}
                renderSuggestionsContainer={[Function]}
                shouldRenderSuggestions={[Function]}
                suggestions={Array []}
                theme={
                                Object {
                                                "container": "react-autosuggest__container",
                                                "containerOpen": "react-autosuggest__container--open",
                                                "input": "react-autosuggest__input",
                                                "inputFocused": "react-autosuggest__input--focused",
                                                "inputOpen": "react-autosuggest__input--open",
                                                "sectionContainer": "react-autosuggest__section-container",
                                                "sectionContainerFirst": "react-autosuggest__section-container--first",
                                                "sectionTitle": "react-autosuggest__section-title",
                                                "suggestion": "react-autosuggest__suggestion",
                                                "suggestionFirst": "react-autosuggest__suggestion--first",
                                                "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                                                "suggestionsContainer": "react-autosuggest__suggestions-container",
                                                "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                                                "suggestionsList": "react-autosuggest__suggestions-list",
                                              }
                }
/>,
              <button>
                Submit
</button>,
            ],
            "className": "location-search",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "alwaysRenderSuggestions": false,
                "focusInputOnSuggestionClick": true,
                "getSuggestionValue": [Function],
                "highlightFirstSuggestion": false,
                "id": "1",
                "inputProps": Object {
                  "onChange": [Function],
                  "placeholder": "Search Locations",
                  "value": "",
                },
                "multiSection": false,
                "onSuggestionsClearRequested": [Function],
                "onSuggestionsFetchRequested": [Function],
                "renderSuggestion": [Function],
                "renderSuggestionsContainer": [Function],
                "shouldRenderSuggestions": [Function],
                "suggestions": Array [],
                "theme": Object {
                  "container": "react-autosuggest__container",
                  "containerOpen": "react-autosuggest__container--open",
                  "input": "react-autosuggest__input",
                  "inputFocused": "react-autosuggest__input--focused",
                  "inputOpen": "react-autosuggest__input--open",
                  "sectionContainer": "react-autosuggest__section-container",
                  "sectionContainerFirst": "react-autosuggest__section-container--first",
                  "sectionTitle": "react-autosuggest__section-title",
                  "suggestion": "react-autosuggest__suggestion",
                  "suggestionFirst": "react-autosuggest__suggestion--first",
                  "suggestionHighlighted": "react-autosuggest__suggestion--highlighted",
                  "suggestionsContainer": "react-autosuggest__suggestions-container",
                  "suggestionsContainerOpen": "react-autosuggest__suggestions-container--open",
                  "suggestionsList": "react-autosuggest__suggestions-list",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="loading-fetch"
>
              Loading...
</p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Loading...",
              "className": "loading-fetch",
            },
            "ref": null,
            "rendered": "Loading...",
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="loading-fetch"
>
              Loading...
</p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Loading...",
              "className": "loading-fetch",
            },
            "ref": null,
            "rendered": "Loading...",
            "type": "p",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <p
              className="loading-fetch"
>
              Loading...
</p>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Loading...",
              "className": "loading-fetch",
            },
            "ref": null,
            "rendered": "Loading...",
            "type": "p",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
